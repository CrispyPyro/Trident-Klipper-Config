[include macros-heat_soak.cfg]
[include macros-gcode_replacements.cfg]

[gcode_macro _CLIENT_VARIABLE]
description: Mainsail macro variables
#variable_use_custom_pos   : False ; use custom park coordinates for x,y [True/False]
#variable_custom_park_x    : 0.0   ; custom x position; value must be within your defined min and max of X
#variable_custom_park_y    : 0.0   ; custom y position; value must be within your defined min and max of Y
#variable_custom_park_dz   : 2.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_retract          : 5.0   ; the value to retract while PAUSE
variable_cancel_retract    : 5.0   ; the value to retract while CANCEL_PRINT
#variable_speed_retract    : 35.0  ; retract speed in mm/s
variable_unretract        : 5.0   ; the value to unretract while RESUME
#variable_speed_unretract  : 35.0  ; unretract speed in mm/s
#variable_speed_hop        : 15.0  ; z move speed in mm/s
#variable_speed_move       : 100.0 ; move speed in mm/s
#variable_park_at_cancel   : False ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
#variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
#variable_park_at_cancel_y : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
variable_use_fw_retract   : True    #use fw_retraction instead of the manual version [True/False]
#variable_idle_timeout     : 0     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
#variable_runout_sensor    : ""    ; If a sensor is defined, it will be used to cancel the execution of RESUME in case no filament is detected.
##                                   Specify the config name of the runout sensor e.g "filament_switch_sensor runout". Hint use the same as in your printer.cfg
## !!! Custom macros, please use with care and review the section of the corresponding macro.
## These macros are for simple operations like setting a status LED. Please make sure your macro does not interfere with the basic macro functions.
## Only  single line commands are supported, please create a macro if you need more than one command.
#variable_user_pause_macro : ""    ; Everything insight the "" will be executed after the klipper base pause (PAUSE_BASE) function
#variable_user_resume_macro: ""    ; Everything insight the "" will be executed before the klipper base resume (RESUME_BASE) function
#variable_user_cancel_macro: ""    ; Everything insight the "" will be executed before the klipper base cancel (CANCEL_PRINT_BASE) function
gcode:          #left intentionally blank


########################################################
#     Print Start/End
########################################################
[gcode_macro PRINT_START]
gcode:
  EXCLUDE_OBJECT_DEFINE

  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("25")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  ;BED_MESH_CLEAR

  STATUS_HOMING
  SET_DISPLAY_TEXT MSG="Homing..."
  _CG28                 # Full home (XYZ)
  G90                   # Absolute position

  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak
  {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    STATUS_HEATING
    M106 S255                                         # Turns on the PT-fan

    G1 X{x_wait} Y{y_wait} Z15 F2000                  # Goes to center of the bed
    M190 S{target_bed}                                # Sets target temp for the bed
    SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Displays info
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber_temp" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp

  # If the bed temp is not over 90c then it skips the heatsoak and just heats up to set temp with a 2min soak.
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"       # Displays info
    STATUS_HEATING                                  # Sets SB-leds to heating-mode
    G1 X{x_wait} Y{y_wait} Z15 F2000                # Goes to center of the bed
    M190 S{target_bed}                              # Sets target temp for the bed
    #####G4 P120000                                      # Waits 2 min for the bedtemp to stabilize
  {% endif %}

  # Heating nozzle to 150 degrees. This helps with getting a correct Z-home.
  SET_DISPLAY_TEXT MSG="Hotend: 150c"      # Displays info
  M109 S150                                # Heats the nozzle to 150c

  SET_DISPLAY_TEXT MSG="Z-tilt adjust"     # Displays info
  STATUS_LEVELING                          # Sets SB-leds to leveling-mode
  Z_TILT_ADJUST                            # Levels the buildplate via z_tilt_adjust
  G28 Z                                    # Homes Z again after z_tilt_adjust

  ;Nevermore_On
  ;SET_FAN_SPEED FAN=Nevermore SPEED=0.75

  BED_MESH_CALIBRATE
  G28 Z
  ;BED_MESH_PROFILE LOAD=default
  Smart_Park
  
  # Heats up the nozzle up to target via slicer
  M107                                              # Turns off the PT-fan
  STATUS_HEATING
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c" # Displays info
  M109 S{target_extruder}                           # Heats the nozzle to your print temp
  #CLEAN_NOZZLE

  SET_DISPLAY_TEXT MSG="Printer goes brr"           # Displays info
  STATUS_PRINTING                                   # Sets SB-leds to printing-mode
  G92 E0
  LINE_PURGE

[gcode_macro PRINT_END]
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    ;BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    SET_NOZZLE_LEDS_OFF

[gcode_macro START_PRINT]
#from https://github.com/rootiest/zippy_guides/blob/main/guides/macros.md#aliases
#helps when these are flipped
gcode:
    PRINT_START {rawparams}

[gcode_macro END_PRINT]
gcode:
    PRINT_END {rawparams}

# [gcode_macro BASE_PAUSE]
# gcode:
#     PAUSE_BASE {rawparams}

#--------------------------------------------------------------------
# Movement Macros, including PARKING MACROS from https://ellis3dp.com/Print-Tuning-Guide/articles/useful_macros/parking.html
[gcode_macro UNSAFE_LOWER_BED]
description: Lower the bed 10mm without homing
gcode:
  G90
  SET_KINEMATIC_POSITION Z=0
  G0 Z10 F600
  M84

[gcode_macro UNSAFE_RAISE_BED]
# https://klipper.discourse.group/t/moving-z-before-homing-or-other/1037/7
description: Raise the bed 10mm without homing
gcode:
  G90
  SET_KINEMATIC_POSITION Z=10
  G0 Z0 F600
  M84

# Park front center
[gcode_macro PARKFRONT]
gcode:
    _CG28                             ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90                               ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z{printer.toolhead.axis_maximum.z/2} F6000        
    RESTORE_GCODE_STATE NAME=PARKFRONT

# Park front center, but low down.
[gcode_macro PARKFRONTLOW]
gcode:
    _CG28                            ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90                              ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z20 F6000                                     
    RESTORE_GCODE_STATE NAME=PARKFRONT

# Park top rear left
[gcode_macro PARKREAR]
gcode:
    _CG28                            ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKREAR
    G90                              ; absolute positioning
    G0 X{printer.toolhead.axis_minimum.x+10} Y{printer.toolhead.axis_maximum.y-10} Z{printer.toolhead.axis_maximum.z-50} F6000     
    RESTORE_GCODE_STATE NAME=PARKREAR

# Park 15mm above center of bed
[gcode_macro PARKBED]
gcode:
    _CG28                              ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKBED
    G90                                ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z15 F6000                                     
    RESTORE_GCODE_STATE NAME=PARKBED
    
# Park at center of build volume
[gcode_macro PARKCENTER]
gcode:
    _CG28                              ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKCENTER
    G90                               ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z{printer.toolhead.axis_maximum.z/2} F6000
    RESTORE_GCODE_STATE NAME=PARKCENTER

# Park at Front-Left of bed for filament changes - MINX+5, MINY+5, MINZ+30
[gcode_macro PARKFILAMENTCHANGE]
gcode:
    _CG28                              ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKFILAMENTCHANGE
    G90                               ; absolute positioning
    G0 X{printer.toolhead.axis_minimum.x+20} Y{printer.toolhead.axis_minimum.y+5} Z{printer.toolhead.axis_minimum.z+30} F6000
    RESTORE_GCODE_STATE NAME=PARKFILAMENTCHANGE

# Park at Center X of bed and where belt length is 150mm from the front for resonance testing
[gcode_macro RESONANCETEST]
gcode:
    _CG28                              ; home if not already homed
    SAVE_GCODE_STATE NAME=RESONANCETEST
    G90                               ; absolute positioning
    G0 X150 Y115 Z{printer.toolhead.axis_maximum.z/2} F6000
    RESTORE_GCODE_STATE NAME=RESONANCETEST

[gcode_macro LOAD_FILAMENT]
variable_load_distance:  50
variable_purge_distance:  60 #50 #25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E{load_distance} F{max_velocity} # fast-load
    G1 E{purge_distance} F{speed} # purge
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  130 #125 #50
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E{purge_distance} F{speed} # purge
    G1 E-{unload_distance} F{max_velocity} # fast-
    CLEAR_ACTIVE_SPOOL
    RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT_EXTRA_PURGE]
variable_load_distance:  50
variable_purge_distance:  180 #25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E{load_distance} F{max_velocity} # fast-load
    G1 E{purge_distance} F{speed} # purge
    RESTORE_GCODE_STATE NAME=load_state


[gcode_macro Case_Lights_On]
gcode:
  SET_LED LED=Case_Lights RED=0 GREEN=0 BLUE=0 WHITE=1

[gcode_macro Case_Lights_Off]
gcode:
  SET_LED LED=Case_Lights RED=0 GREEN=0 BLUE=0 WHITE=0
